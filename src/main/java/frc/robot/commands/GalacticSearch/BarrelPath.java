/*----------------------------------------------------------------------------*/
/* Copyright (c) 2019 FIRST. All Rights Reserved.                             */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package frc.robot.commands.GalacticSearch;

import edu.wpi.first.wpilibj2.command.ParallelCommandGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.pathfinder.Pathfinder.Waypoint;
import frc.robot.PurePursuit.PathConfigs;
import frc.robot.commands.Auto.CreatePathCommand;
import frc.robot.subsystems.DriveSubsystem;

// NOTE:  Consider using this command inline, rather than writing a subclass.  For more
// information, see:
// https://docs.wpilib.org/en/latest/docs/software/commandbased/convenience-features.html
public class BarrelPath extends ParallelCommandGroup {
  /**
   * Creates a new pathAuto.
   */

  //Waypoints
  // 0,3.5,90, 0, 0, 8
  // 0,13,70
  // 5,12.6,-90,3,3,0
  // 0,13,95,0,0,8
  // .75,20,100
  // -5,20,-90,2,2,0
  // -.75,19,55,1,1,8
  // 5.5,25,90,2,2,0
  // 1,25,-90,2,2,0
  // 1.5,20,-95,1,1,15
  // -1.5,-3.5,-90
//changed

  // static final Waypoint[] k_loopDrive = { 
  //     new Waypoint(0, 3.5, Math.toRadians(90), 0, 0, 8),
  //     new Waypoint(0, 13, Math.toRadians(70)), 
  //     new Waypoint(5, 12.6, Math.toRadians(-90), 3, 3, 0), 
  //     new Waypoint(0, 13, Math.toRadians(95), 0, 0, 8),
  //     new Waypoint(.75, 20, Math.toRadians(100)), 
  //     new Waypoint(-5, 20, Math.toRadians(-90), 2, 2, 0),
  //     new Waypoint(-.75, 19, Math.toRadians(55), 1, 1, 8),
  //     new Waypoint(5.5, 25, Math.toRadians(90), 2, 2, 0), 
  //     new Waypoint(1, 25, Math.toRadians(-90), 2, 2, 0),
  //     new Waypoint(1.5, 20, Math.toRadians(-95), 1, 1, 15),
  //     new Waypoint(-1.5, -3.5, Math.toRadians(-90))
  //    };

  /*
0,3.5,96.902,4.432,3.167
0,13,70
5,12.6,-90,3,3
0,13,90
0.799,19.615,100
-5.547,20.104,-90,2,2
-0.222,19.083,55,1,1
4.926,24.985,90,2,2
0.577,25.207,-90,0,0
1.243,19.882,-95,1,1
-1.198,2.751,-90
*/
/*
0,3.5,96.902,4.432,3.167,0
0,13,70
5,12.6,-90,3,3,0
0,13,75.612,3.393,2.188
1.287,19.438,100
-4.97,20.192,-90,2,2,0
-0.222,19.083,50.007,1.796,1,0
4.615,24.985,90,2,2,0
0.311,25.296,257.768,2.725,1.465,0
-0.266,19.749,268.27,1,5.547,0
-1.243,3.018,270.454
*/
/*
0,3.5,96.902,4.432,3.167,0
0,13,70
5,12.6,-90,3,3,0
0,13,75.612,3.393,2.188
1.287,19.438,100
-4.97,20.192,-90,2,2,0
-0.222,19.083,50.007,1.796,1,0
4.127,24.852,90,2,2,0
0.444,25.251,271.033,2.441,2.009,0
0.444,19.66,263.67,1.833,1.833,0
-1.243,3.018,267.759
*/
/*
0,3.5,96.902,4.432,3.167,0
0,13,70
5,12.6,-90,3,3,0
0,13,75.612,3.393,2.188
1.376,19.482,112.837,2.745,2.101
-4.97,20.192,-90,2,2,0
-0.222,19.083,46.035,1.726,1,0
3.905,24.763,90,2,2.133,0
0.222,25.251,267.794,2.309,2.291,0
0.71,19.749,278.915,1.833,1.833,0
-1.243,3.018,267.759
*/
/*
0,3.5,96.902,4.432,3.167,0
0,13,70
5,12.6,-90,3,3,0
0,13,75.612,3.393,1.909
0.976,19.749,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
-0.222,19.083,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,1.833,0
-1.243,3.018,267.759
*/
/*
0,3.5,96.902,4.432,3.167,0
0.266,12.825,70
5,12.6,-90,3,3,0
0.444,12.914,75.612,3.393,1.909
1.243,19.926,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,9.586,0
-1.243,3.018,270.528
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5,12.6,-90,3,3,0
0.089,12.959,75.612,3.393,1.909
1.243,19.926,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,9.586,0
-1.243,2.574,270.528
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5,12.6,-90,3,3,0
0.089,12.959,75.612,3.393,1.909
1.243,19.926,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,10.43,0
-1.287,1.331,270.731
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5,12.6,-90,3,3,0
0.133,12.959,75.612,3.393,1.909
1.243,19.926,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,11.051,0
-1.154,-0.666,270.459
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5,12.6,-90,3,3,0
0.133,12.959,75.612,3.393,1.909
1.243,19.926,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
3.683,24.719,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.42,19.882,278.915,1.833,14.105,0
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5,12.6,-90,3,3,0
0.133,12.959,75.612,3.393,1.909
1.287,19.66,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
1.864,20.059,278.915,1.833,14.105,0
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,0
0.133,13.225,70
5.281,12.426,-90,3,3,0
0.133,12.959,75.612,3.393,1.909
1.287,19.66,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,0
2.53,19.97,278.915,1.833,14.105,0
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
-0.577,13.047,75.612,3.393,1.909,12
1.287,19.66,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,12
2.53,19.97,278.915,1.833,14.105,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
-0.577,13.047,75.612,3.393,1.909,12
1.775,19.749,448.66,2.738,2.101
-4.97,20.192,-90,2,2,0
0.0,18.905,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,\12
0.444,24.985,279.086,2.247,2.291,12
2.53,19.97,278.915,1.833,14.105,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
-0.577,13.047,75.612,3.393,1.909,12
2.13,19.749,448.66,2.738,2.101
-4.393,20.192,-90,2,2,0
0.355,18.639,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,12
2.485,19.749,278.915,1.833,14.105,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
-0.577,13.047,75.612,3.393,1.909,12
2.796,19.882,448.66,2.738,2.101
-3.683,20.148,-90,2,2,0
0.355,18.639,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,12
3.018,19.66,278.915,1.833,14.105,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.909,12
2.796,19.882,448.66,2.738,2.101
-3.683,20.148,-90,2,2,0
0.355,18.639,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,2.291,12
3.018,19.66,278.915,1.833,14.105,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,7
-3.683,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,1,0
2.973,24.63,85.673,2.359,2.133,0
0.444,24.985,279.086,2.247,1.445,12
3.018,19.66,280.631,2.319,2.319,12
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,8
-3.683,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,10,1,0
2.973,24.63,85.673,2.359,2.133,10
0.444,24.985,279.086,2.247,1.445,14
3.018,19.66,280.631,2.319,2.319,14
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,8
-3.683,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
2.973,24.63,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.018,19.66,280.631,2.319,2.319,14
-1.154,-1.9,270.54

0.178,18.373,33.102,1.219,3.551,10
2.973,24.63,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.018,19.66,280.631,2.319,2.319,14
-1.154,-1.9,270.54

-3.107,17.485,355.903,4.3,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995

last lorelei
constnt vel at 9
*/
/*
0,3.5,96.902,4.432,0.678,11
-0.311,11.095,438.702,2.643,2.014
3.55,15.178,349.43,2.664,2.079
2.441,10.118,167.467,3.683,2.486
0.0,17.441,85.972,3.159,2.274
-3.95,21.524,213.703,1.92,1.245
-3.107,17.485,355.903,4.3,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.77
-1.109,3.373,258.968
*/
/*
0,3.5,96.902,4.432,1.002,11
0.311,12.604,437.182,1.543,2.014
3.373,14.467,349.43,2.664,1.263
3.062,10.607,161.546,3.439,2.486
0.0,17.441,85.972,3.159,2.274
-3.95,21.524,213.703,1.92,1.245
-3.107,17.485,355.903,4.3,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,8
-4.038,20.015,255.957,1.098,0.923,0
-3.107,17.485,326.33,1.28,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,8
-3.107,20.192,255.957,1.098,0.923,0
-2.352,18.062,326.33,1.28,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.751,19.97,100.001,1.445,2.204,8
-3.107,20.192,242.395,1.098,1.098,7
-1.997,17.751,326.33,1.28,3.916
3.284,23.077,432.182,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,1.776,0
0.488,13.447,437.012,1.568,1.348,10
2.352,20.148,107.243,1.347,1.347,8
-3.107,20.192,248.396,1.098,1.098,7
-1.997,17.751,326.33,1.28,5.885
3.284,23.077,429.242,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,1.854,0
0.666,13.047,90.029,0.622,0.377,10
1.376,20.414,109.985,1.347,1.347,8
-3.107,20.192,264.824,1.47,1.098,7
-1.997,17.751,326.33,1.28,5.885
3.284,23.077,429.242,1.62,1.096
2.751,26.272,163.773,2.542,8.427
-1.109,3.373,259.995
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,3,0
0.488,13.447,75.612,3.393,1.533,10
2.796,19.882,100.001,1.445,1.657,8
-3.683,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
2.973,24.63,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.018,19.66,280.631,2.319,2.319,14
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
2.041,19.482,100.001,1.445,1.657,8
-3.107,19.704,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
3.107,24.896,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.062,18.994,280.631,2.319,2.319,14
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
2.041,19.482,100.001,1.445,1.657,8
-3.905,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
3.107,24.896,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.062,18.994,280.631,2.319,2.319,14
-1.154,-1.9,270.54
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
2.041,19.482,100.001,1.445,1.657,8
-3.905,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
3.107,24.896,448.574,2.359,2.359,10
0.444,24.985,279.086,2.247,1.445,14
3.328,19.127,280.631,2.319,6.882,14
-1.731,-2,270.737
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
2.041,19.482,100.001,1.445,1.657,8
-3.905,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
2.707,24.941,91.143,2.219,1.664,10
0.222,25.118,279.213,2.247,2.247,14
3.728,19.216,280.631,2.319,6.882,14
-1.731,-2,270.737
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
2.041,19.482,100.001,1.445,1.657,8
-3.905,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
2.707,24.941,91.143,2.219,1.664,10
0.222,25.118,279.213,2.247,2.247,14
3.728,19.216,280.631,2.319,7.55,14
-1.731,-4,269.998
*/
/*
0,3.5,96.902,4.432,3.167,11
-0.444,13.402,70
4.97,12.515,-90,3,2.229,0
0.488,13.447,437.353,3.24,3.24,10
1.997,20.059,100.001,1.445,1.657,8
-3.905,20.148,258.351,1.541,2,0
0.089,18.373,33.102,1.219,3.551,10
2.707,24.941,91.143,2.219,1.664,10
0.222,25.118,285.642,2.304,2.247,14
4.26,19.216,280.631,2.319,7.55,14
-1.731,-4,269.998
*/
static final Waypoint[] k_path = {
  new Waypoint(0, 3.5, Math.toRadians(96.902), 4.432, 3.167, 11),
  new Waypoint(-0.444, 13.402, Math.toRadians(70)),
  new Waypoint(4.97, 12.515, Math.toRadians(-90), 3, 2.229, 0),
  new Waypoint(0.488, 13.447, Math.toRadians(437.353), 3.24, 3.24, 10),
  new Waypoint(1.997, 20.059, Math.toRadians(100.001), 1.445, 1.657, 8),
  new Waypoint(-3.905, 20.148, Math.toRadians(258.351), 1.541, 2, 0),
  new Waypoint(0.089, 18.373, Math.toRadians(33.102), 1.219, 3.551, 10),
  new Waypoint(2.707, 24.941, Math.toRadians(91.143), 2.219, 1.664, 10),
  new Waypoint(0.222, 25.118, Math.toRadians(285.642), 2.304, 2.247, 16),
  new Waypoint(4.26, 19.216, Math.toRadians(280.631), 2.319, 7.55, 16),
  new Waypoint(-1.731, -4, Math.toRadians(269.998))
};
  DriveSubsystem m_driveSubsystem;

  public BarrelPath(DriveSubsystem driveSubsystem) {
    // Add your commands in the super() call, e.g.
    // super(new FooCommand(), new BarCommand());super();
    m_driveSubsystem = driveSubsystem;
    addCommands(new SequentialCommandGroup(new CreatePathCommand(driveSubsystem, k_path, PathConfigs.barrel)));
  }

  @Override
  public void initialize() {
    super.initialize();
    m_driveSubsystem.setPos(0, 3.5);
    m_driveSubsystem.resetAngle(90);
  }
}
// beat 13.24 seconds